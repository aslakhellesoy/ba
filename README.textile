h1. Ba

Ba is a conference and event management system based on "Radiant":http://radiantcms.org/.
Ba aims to be minimalistic and reuse Radiant and other Radiant extensions as much as possible.

Essentially, Ba lets site admins create special "happening" pages which have additional properties
such as start date and end date. This page (and all sub pages) can then use special Ba tags to design
the conference site.

We chose the name Ba because it's Japanese for "a place that supports sharing and relationship building" 
and because Japanese is hot. Ba will be used for a 500 people conference, "Smidig 2008":http://smidig2008.no
and hopefully for lots of other conferences and other happenings in the future.

h2. Features

The features in Ba target 3 main roles: Organisers, speakers and regular attendees.

h3. Organizers

The organiser tools consist of extensions to the Radiant admin panel as well as custom tags.

* Create new happenings (conference or event).
* Set up a schedule/program
* Send mass emails to attendees
* Manage price/discount codes
* List attendees and billing status
* Several radius tags for happening related content

h3. Speakers

* Register talks/presentations
* Attach slides

h3. Attendees + speakers

* Maintain a bio

h2. Installation

The first thing you need to do is to create a clone of Radiant. Actually, you should clone
"Aslak Helles√∏y's Radiant clone":http://github.com/aslakhellesoy/radiant/tree/master, because this
clone has Ba and all other required extensions and plugins installed as Git submodules. Here is how
you do that:

<pre><code>git clone git://github.com/aslakhellesoy/radiant.git radiant_ba
cd radiant_ba
git submodule init
git submodule update
</code></pre>

When you have a local clone, set up you database configuration. Copy one of the config/database.xxx.yml to 
config/database.yml. If you're using anything else than SQLite (which works fine) you also need to create 
the databases specified in config.yml.

Now, let's create all the tables:

<pre><code>rake db:bootstrap
rake db:migrate:extensions
rake radiant:extensions:update_all
</code></pre>

Start Radiant with script/server and go to http://localhost:3000

h2. Configuration

h3. Creating a new happeing (conference, meeting, whatever)

# Create a new page (or edit an existing one)
# Select "Happening" from the page type dropdown list

h2. Contributing

Want to help out with development of Ba? Start by reading "8 steps for fixing other people's code":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/ if you're new to
open source development. Then, follow the installation instructions above. You can't check out the Ba repository alone - 
it has to be within a Radiant clone.

h3. Run tests

When you have the code installed, make sure you can run the awesome test suite based on RSpec and "Cucumber":http://github.com/aslakhellesoy/cucumber/tree/master.

<pre><code>rake radiant:extensions:ba:stories_and_specs
</code></pre>

This should produce all green, passing stories and specs. You can also run individual stories and
scenarios with these commands:

<pre><code>cucumber vendor/extensions/ba/stories/create_conference.story
cucumber vendor/extensions/ba/stories/create_conference.story --line 7
cucumber --help
</code></pre>

h3. BDD

If you have found a bug or want to add a feature, start by writing a new story or scenario that describes the
feature you want. Snoop around in the existing stories (in the stories folder) to get started. Alternatively,
if you want to fix something more low level, write a spec instead (see the specs folder).

Now run the stories or specs again. The one you wrote should fail. If it doesn't you're doing something wrong,
or the feature is already implemented (unlikely).

This is when you start writing code. You might as well get used to doing it this way, because we won't accept
any patches unless you also have stories or specs for your code. This is because we don't want to end up with a 
brittle, unmaintainable, undocumented pile of code that noone understands. (Yes, stores and specs are *documentation* too).

If you think this sounds annoying, try it out anyway. You'll end up writing better (and less) code this way. Trust me.
Work outside-in (the outside being the story, the inside being the guts). Do it the "BDD":http://en.wikipedia.org/wiki/Behavior_driven_development way.

h2. Deployment

We recommend deploying Radiant+Ba to a POSIX server (Linux/Solaris), because that's what we're familiar with.
Use "Capistrano":http://www.capify.org/ for this.

You may try to package the whole thing into a war file with "Warbler":http://caldersphere.rubyforge.org/warbler/
and deploy it to a Java servlet container, but noone has tried this yet (to our knowledge).

h2. Getting in touch

There is no mailing list or forum yet, so please use the radiant forum for now. If it gets too busy there we'll
set up a separate mailing list.

h2. Credits

* Marty Haught for his "Page Event":http://github.com/mghaught/radiant-page-event/tree/master extension. Ba is inspired from this.
* Johannes Brodwall for help on early versions of Ba